<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!-- Названия разделов -->
    <string name="section_name_1"> Заменить название Раздел 1 </string>
    <string name="section_name_2"> Заменить название Раздел 2 </string>
    <string name="section_name_3"> Заменить название Раздел 3 </string>
    <string name="section_name_4"> Заменить название Раздел 4 </string>
    <string name="section_name_5"> Заменить название Раздел 5 </string>

    <!-- Названия статей раздела 1 -->
    <string name="articles_name_1_1"> Заменить название статьи_1_1 </string>
    <string name="articles_name_1_2"> Заменить название статьи_1_2 </string>
    <string name="articles_name_1_3"> Заменить название статьи_1_3 </string>

    <!-- Названия статей раздела 2 -->
    <string name="articles_name_2_1"> Заменить название статьи_2_1 </string>
    <string name="articles_name_2_2"> Заменить название статьи_2_2 </string>
    <string name="articles_name_2_3"> Заменить название статьи_2_3 </string>

    <!-- Названия статей раздела 3 -->
    <string name="articles_name_3_1"> Заменить название статьи_3_1 </string>
    <string name="articles_name_3_2"> Заменить название статьи_3_2 </string>
    <string name="articles_name_3_3"> Заменить название статьи_3_3 </string>

    <!-- Названия статей раздела 4 -->
    <string name="articles_name_4_1"> Заменить название статьи_4_1 </string>
    <string name="articles_name_4_2"> Заменить название статьи_4_2 </string>
    <string name="articles_name_4_3"> Заменить название статьи_4_3 </string>

    <!-- Названия статей раздела 5 -->
    <string name="articles_name_5_1"> Заменить название статьи_5_1 </string>
    <string name="articles_name_5_2"> Заменить название статьи_5_2 </string>
    <string name="articles_name_5_3"> Заменить название статьи_5_3 </string>

    <!-- Текст Раздел 1 Статья 1 -->
    <string name="articles_text_1_1">
        Заменить текст Раздел 1 Статья 1
        Соглашение о стилистике кода
        Общеизвестные и простые в использовании соглашения о стилистике кода жизненно важны для
        любого языка программирования. Здесь мы предоставляем рекомендации по стилю кода и его
        организации для проектов, использующих Kotlin.
        Настройка стиля в IDE
        Две самые популярные IDE для Kotlin - IntelliJ IDEA и Android Studio обеспечивают широкую
        поддержку стиля кода. Вы можете настроить их для автоматического форматирования вашего кода
        в соответствии с заданным стилем.
        Примените руководства по стилю
        Перейдите в раздел Settings/Preferences | Editor | Code Style | Kotlin.
        Нажмите Set from....
        Выберите Kotlin style guide.
        Убедитесь, что ваш код соответствует руководству по стилю
        Перейдите в раздел Settings/Preferences | Editor | Code Style | Kotlin.
        Отройте Kotlin | Style issues.
        Включите проверку File is not formatted according to project settings. Дополнительные
        проверки, которые проверяют другие проблемы, описанные в руководстве по стилю
        (например, соглашения об именах), включены по умолчанию.
        Организация кода
        Структура каталогов
        В проектах, в которых используется только Kotlin, рекомендуемая структура каталогов
        соответствует структуре пакетов, при этом общий корневой пакет опущен.
        Например, если весь код в проекте находится в пакете org.example.kotlin и его подпакетах,
        файлы с пакетом org.example.kotlin должны размещаться непосредственно в корневом каталоге,
        а файлы в org.example.kotlin.network.socket должны находиться в подкаталоге корневого
        каталога network/socket.
        На JVM: в проектах, где Kotlin используется на ряду с Java, файлы Kotlin должны находиться
        в том же корне источника, что и исходные файлы Java, и следовать той же структуре каталогов:
        каждый файл должен храниться в каталоге, соответствующем каждой инструкции пакета.
    </string>

    <!-- Текст Раздел 1 Статья 2 -->
    <string name="articles_text_1_2">
        Заменить текст Раздел 1 Статья 2
    </string>

    <!-- Текст Раздел 1 Статья 3 -->
    <string name="articles_text_1_3">
        Заменить текст Раздел 1 Статья 3
    </string>

    <!-- Текст Раздел 2 Статья 1 -->
    <string name="articles_text_2_1">
        Заменить текст Раздел 2 Статья 1
        Общеизвестные и простые в использовании соглашения о стилистике кода жизненно важны для
        любого языка программирования. Здесь мы предоставляем рекомендации по стилю кода и его
        организации для проектов, использующих Kotlin.
        Настройка стиля в IDE
        Две самые популярные IDE для Kotlin - IntelliJ IDEA и Android Studio обеспечивают широкую
        поддержку стиля кода. Вы можете настроить их для автоматического форматирования вашего кода
        в соответствии с заданным стилем.
        В проектах, в которых используется только Kotlin, рекомендуемая структура каталогов
        соответствует структуре пакетов, при этом общий корневой пакет опущен.
        Например, если весь код в проекте находится в пакете org.example.kotlin и его подпакетах,
        файлы с пакетом org.example.kotlin должны размещаться непосредственно в корневом каталоге,
        а файлы в org.example.kotlin.network.socket должны находиться в подкаталоге корневого
        каталога network/socket.
    </string>

    <!-- Текст Раздел 2 Статья 2 -->
    <string name="articles_text_2_2">
        Заменить текст Раздел 2 Статья 2
    </string>

    <!-- Текст Раздел 2 Статья 3 -->
    <string name="articles_text_2_3">
        Заменить текст Раздел 2 Статья 3
    </string>

    <!-- Текст Раздел 3 Статья 1 -->
    <string name="articles_text_3_1">
        Заменить текст Раздел 3 Статья 1
    </string>

    <!-- Текст Раздел 3 Статья 2 -->
    <string name="articles_text_3_2">
        Заменить текст Раздел 3 Статья 2
    </string>

    <!-- Текст Раздел 3 Статья 3 -->
    <string name="articles_text_3_3">
        Заменить текст Раздел 3 Статья 3
    </string>

    <!-- Текст Раздел 4 Статья 1 -->
    <string name="articles_text_4_1">
        Заменить текст Раздел 4 Статья 1
        Общеизвестные и простые в использовании соглашения о стилистике кода жизненно важны для
        любого языка программирования. Здесь мы предоставляем рекомендации по стилю кода и его
        организации для проектов, использующих Kotlin.
        Настройка стиля в IDE
        Две самые популярные IDE для Kotlin - IntelliJ IDEA и Android Studio обеспечивают широкую
        поддержку стиля кода. Вы можете настроить их для автоматического форматирования вашего кода
        в соответствии с заданным стилем.
        На JVM: в проектах, где Kotlin используется на ряду с Java, файлы Kotlin должны находиться
        в том же корне источника, что и исходные файлы Java, и следовать той же структуре каталогов:
        каждый файл должен храниться в каталоге, соответствующем каждой инструкции пакета.
</string>

    <!-- Текст Раздел 4 Статья 2 -->
    <string name="articles_text_4_2">
        Заменить текст Раздел 4 Статья 2
    </string>

    <!-- Текст Раздел 4 Статья 3 -->
    <string name="articles_text_4_3">
        Заменить текст Раздел 4 Статья 3
    </string>

    <!-- Текст Раздел 5 Статья 1 -->
    <string name="articles_text_5_1">
        Заменить текст Раздел 5 Статья 1
        Общеизвестные и простые в использовании соглашения о стилистике кода жизненно важны для
        любого языка программирования. Здесь мы предоставляем рекомендации по стилю кода и его
        организации для проектов, использующих Kotlin.
        Настройка стиля в IDE
        Две самые популярные IDE для Kotlin - IntelliJ IDEA и Android Studio обеспечивают широкую
        поддержку стиля кода. Вы можете настроить их для автоматического форматирования вашего кода
        в соответствии с заданным стилем.
        В проектах, в которых используется только Kotlin, рекомендуемая структура каталогов
        соответствует структуре пакетов, при этом общий корневой пакет опущен.
        Например, если весь код в проекте находится в пакете org.example.kotlin и его подпакетах,
        файлы с пакетом org.example.kotlin должны размещаться непосредственно в корневом каталоге,
        а файлы в org.example.kotlin.network.socket должны находиться в подкаталоге корневого
        каталога network/socket.
    </string>

    <!-- Текст Раздел 5 Статья 2 -->
    <string name="articles_text_5_2">
        Заменить текст Раздел 5 Статья 2
    </string>

    <!-- Текст Раздел 5 Статья 3 -->
    <string name="articles_text_5_3">
        Заменить текст Раздел 5 Статья 3
    </string>

</resources>